{"mappings":"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","sources":["src/js/util.js","node_modules/lodash/trim.js","node_modules/lodash/_baseToString.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_root.js","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_arrayMap.js","node_modules/lodash/isArray.js","node_modules/lodash/isSymbol.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/_objectToString.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/_baseTrim.js","node_modules/lodash/_trimmedEndIndex.js","node_modules/lodash/_castSlice.js","node_modules/lodash/_baseSlice.js","node_modules/lodash/_charsEndIndex.js","node_modules/lodash/_baseIndexOf.js","node_modules/lodash/_baseFindIndex.js","node_modules/lodash/_baseIsNaN.js","node_modules/lodash/_strictIndexOf.js","node_modules/lodash/_charsStartIndex.js","node_modules/lodash/_stringToArray.js","node_modules/lodash/_asciiToArray.js","node_modules/lodash/_hasUnicode.js","node_modules/lodash/_unicodeToArray.js","node_modules/lodash/toString.js"],"sourcesContent":["/* eslint-disable no-param-reassign,no-console */\n\nimport trim from 'lodash/trim';\n\nconst concatUrlParts = (parts) => parts\n  .map((p) => trim(p.toString(), '/'))\n  .join('/');\n\nexport const apiFetchGen = (t) => {\n  const apiPromise = t.getRestApi();\n\n  return async (method, endpoint, data = {}) => {\n    const api = await apiPromise;\n    const token = await api.getToken();\n\n    const urlParts = [\n      api.apiOrigin,\n      '1',\n      endpoint,\n    ];\n\n    if (data.id) {\n      urlParts.push(data.id);\n\n      delete data.id;\n    }\n\n    const url = new URL(concatUrlParts(urlParts));\n\n    Object.entries({\n      ...data,\n      key: api.appKey,\n      token,\n    }).forEach(([k, v]) => url.searchParams.set(k, v));\n\n    let text;\n\n    return fetch(url, { method })\n      .then((r) => r.text())\n      .then((r) => {\n        text = r;\n\n        return JSON.parse(r);\n      })\n      .catch((err) => console.error(err, text));\n  };\n};\n\nexport const appKey = {\n  appKey: '1133d2242b5152305510663723c689e2',\n  appName: 'Lark Camp Power-up',\n};\n\nexport default apiFetchGen;\n","var baseToString = require('./_baseToString'),\n    baseTrim = require('./_baseTrim'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return baseTrim(string);\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nmodule.exports = trim;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsEndIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsStartIndex;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n"],"names":[],"version":3,"file":"setup-for-next-year-dialog.6554e50f.js.map"}