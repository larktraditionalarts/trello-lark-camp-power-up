{"mappings":"AAAA,MAAM,0BAAI,cAAc,MAAM;AAE9B,MAAM,+BAAS,IAAM;IACnB,wBAAE,UAAU;AACd;AAEA,MAAM,mCAAa,IAAM;IACvB;QAAC;QAAa;KAAkB,CAAC,OAAO,CAAC,CAAC,KAAO;QAC/C,MAAM,KAAK,SAAS,cAAc,CAAC;QAEnC,GAAG,SAAS,GAAG,GAAG,SAAS,KAAK,WAAW,KAAK,QAAQ;IAC1D;AACF;AAEA,MAAM,yCAAmB,CAAC,QAAU;IAClC,MAAM,KAAK,SAAS,cAAc,CAAC;IACnC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;AAC9B;AAEA,MAAM,kCAAY;AAClB,4EAA4E;AAC5E,8EAA8E;AAC9E,MAAM,8BAAQ;AACd,MAAM,yCAAmB;AAEzB,MAAM,iCAAW,OAAO,SAAW;IACjC,QAAQ,GAAG,CAAC;IAEZ;IAEA,IAAI;QACF,MAAM,QAAQ,MAAM,wBAAE,KAAK,CAAC;QAE5B,QAAQ,GAAG,CAAC,KAAK,CAAC,EAAE;QAEpB;IAqCF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC;IAChB,SAAU;QACR;IACF;AACF;AAEA,OAAO,OAAO,GAAG,IAAM,+BAAS;AAChC,OAAO,UAAU,GAAG,IAAM,+BAAS;AAEnC,OAAO,cAAc,GAAG,IAAM;IAC5B,MAAM;IACN;AACF;AAEA,OAAO,UAAU,GAAG,IAAM;IACxB;AACF;AAEA,wBAAE,MAAM,CAAC,IAAM;IACb,wBAAE,MAAM,CAAC,cAAc,IAAI;AAC7B","sources":["src/js/change-date-dialog.js"],"sourcesContent":["const t = TrelloPowerUp.iframe();\n\nconst finish = () => {\n  t.closePopup();\n};\n\nconst toggleLoad = () => {\n  ['edit-date', 'loading-message'].forEach((id) => {\n    const el = document.getElementById(id);\n\n    el.className = el.className === 'hidden' ? '' : 'hidden';\n  });\n};\n\nconst setProgressValue = (value) => {\n  const el = document.getElementById('progress-bar-fill');\n  el.style.width = `${value}%`;\n};\n\nconst msPerYear = 31536000000;\n// https://developer.atlassian.com/cloud/trello/guides/rest-api/rate-limits/\n// We can probably get away with less delay, but this is playing it safe safe.\nconst delay = 150;\nconst matchesYearLabel = /^year:(.*)/;\n\nconst editYear = async (amount) => {\n  console.log('editing years...');\n\n  toggleLoad();\n\n  try {\n    const cards = await t.cards('all');\n\n    console.log(cards[0]);\n\n    return;\n\n    // recursively update cards, waiting by delay amount\n    const updateCards = async () => {\n      const card = cards.pop();\n\n      if (!card) return;\n\n      const { id, due, labels } = card;\n\n      const dueDate = new Date(due);\n\n      const yearLabel = labels.find(matchesYearLabel.test);\n      let newYear;\n      if (yearLabel) {\n        const currentYear = (yearLabel.match(matchesYearLabel) || [])[1];\n        newYear = parseInt(currentYear, 10) + amount;\n      } else {\n        newYear = dueDate.getFullYear() + amount;\n      }\n\n      dueDate.setFullYear(newYear);\n\n      console.log('setting', card.id, 'shared', 'due', dueDate.toISOString());\n\n      await t.set(id, 'shared', {\n        due: dueDate.toISOString(),\n        labels: [\n          ...labels.filter((l) => !matchesYearLabel.test(l)),\n          `year:${newYear}`,\n        ],\n      });\n\n      setTimeout(() => updateCards(cards), delay);\n    };\n\n    updateCards();\n  } catch (e) {\n    console.error(e);\n  } finally {\n    toggleLoad();\n  }\n};\n\nwindow.addYear = () => editYear(1);\nwindow.removeYear = () => editYear(-1);\n\nwindow.unsetCompleted = () => {\n  alert('unset completed');\n  finish();\n};\n\nwindow.closePopup = () => {\n  finish();\n};\n\nt.render(() => {\n  t.sizeTo('#edit-date').done();\n});\n"],"names":[],"version":3,"file":"change-date-dialog.6a6bd51b.js.map"}